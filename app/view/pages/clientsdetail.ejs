<!DOCTYPE html>

<html lang="en">
<head>
   <%include ../partials/head %>
   <title>Clients</title>
</head>

<body>

<div class="logo">
    <div style="padding:0px;float:left;width:20%;opacity:0.85;text-align:center;">
        <img src="/assets/img/logo.png" width="100px" height="auto" alt="logo kinnil">
    </div>
    <!--<div style="padding:0px;float:right;width:20%;opacity:0.85;text-align:center;">
        <img src="/assets/img/kinnil.png" width="350px" height="auto" alt="logo kinnil">
    </div> -->
</div>

<!-- Navigation -->
<nav class="navbar navbar-default">
    <div class="container-fluid">

        <div class="navbar-header">
            <a href="../../dispatcher/home" type="button" class="btn btn-primary-outline navbar-btn home-link">
            <i class="glyphicon glyphicon-home"></i>
                <span>Home</span>
            </a>
            <!--<button type="button" id="sidebarCollapse" class="btn btn-info navbar-btn">
                <i class="glyphicon glyphicon-align-left"></i>
                <span>Toggle Sidebar</span>
            </button>-->
        </div>

        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav navbar-right">
                <li><a style="cursor: default;"><i class="glyphicon glyphicon-user"></i> <%= user.username %> </a></li>
            </ul>
        </div>
    </div>
</nav>

<div class="wrapper">
        <!-- Sidebar Holder -->
        <nav id="sidebar">
                <!--<div class="sidebar-header">
                    <h3>Bootstrap Sidebar</h3>
                </div>-->
            
                <ul class="list-unstyled components">
                    <!--
                        TODO: hay que hacer que la clase active se ponga segun la pagina que estan viendo actualmente
                    -->
                    <li>
                        <a href="#homeSubmenu" data-toggle="collapse" aria-expanded="false">Dispatch</a>
                        <ul class="collapse list-unstyled" id="homeSubmenu">
                            <li><a href="../../dispatcher/tobeassigned">To be asigned</a></li>
                            <li><a href="../../dispatcher/workinprogress">Work in Progress</a></li>
                            <li><a href="../../dispatcher/completed">Completed</a></li>
                            <li><a href="../../dispatcher/divert">Divert</a></li>
                        </ul>
                    </li>
                    <li class="active">
                        <a href="#administrativeSubmenu" data-toggle="collapse" aria-expanded="false">Administrative</a>
                        <ul class="collapse list-unstyled" id="administrativeSubmenu">
                            <li><a href="../../administrative/clients">Clients</a></li>
                            <li><a href="../../administrative/hr">Human resources</a></li>
                            <li><a href="../../administrative/drivers">Drivers</a></li>
                            <li><a href="../../administrative/clockin">Clock in</a></li>
                        </ul>
                    </li>
                    <li>
                        <li><a href="../../assets/home">Assets</a></li>
                    </li>
                    <li id="li_sdbr_payroll"><a href="#PayrollSubmenu" data-toggle="collapse" aria-expanded="false">Payroll</a></li>
                        <ul class="collapse list-unstyled" id="PayrollSubmenu">
                            <li><a href="../../payroll/hr">Human resources</a></li>
                            <li><a href="../../payroll/drivers">Drivers</a></li>
                        </ul>
                    <li><a href="../../invoice/home">Invoice</a></li>
                    <li><a href="../../reports/home">Reports</a></li>
                </ul>
            
                <!--
                <ul class="list-unstyled CTAs">
                    <li><a href="https://bootstrapious.com/tutorial/files/sidebar.zip" class="download">Download source</a></li>
                    <li><a href="https://bootstrapious.com/p/bootstrap-sidebar" class="article">Back to article</a></li>
                </ul>
            -->
            </nav>

        <!-- Page Content Holder -->
        <div id="content" class="main-content">
            <ul class="nav nav-tabs">
                    <li role="presentation" class="active"><a href="../../administrative/clients">Clients</a></li> <!-- ../../ porque ahora la url tiene el Id del cliente -->
                    <li role="presentation"><a href="../../administrative/hr">Human resources</a></li>
                    <li role="presentation"><a href="../../administrative/drivers">Drivers</a></li>
            </ul>
            <div class="tab-content"> 
                <div class="content">
                    
                    <div class="row">
                        <div class="col-md-12">
                            <h3>
                            <%if (client.length > 0) { %>
                                <%= client[0].name %>
                                <%= client[0].address %>
                            <% } %>
                            </h3>
                        </div>
                    </div>


                    <br/>
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Crews</h4>
                            <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#addCrewModal"> Add Crew </button>
                            <table id='grid-crews' border="1" class="table table-bordered table-condensed table-hover table-striped" >
                                <thead>
                                    <tr>
                                        <th data-column-id="id" data-width="5%" data-type="numeric">#</th>
                                        <th data-column-id="name" data-formatter="link">Name</th>
                                        <th data-column-id="options" data-width="10%" data-formatter="commands" data-sortable="false">Options</th>
                                    </tr>
                                </thead>
                                <%if (crews.length > 0) { %>
                                <tbody>
                                    <% for(var i=0; i<crews.length; i++) {%>
                                        <tr class="quote">
                                            <td> <%= crews[i].id %> </td>
                                            <td> <%= crews[i].name %> </td>
                                        </tr>
                                    <% } %>
                                </tbody>
                                <% } else{ %>  
                                    <tbody>
                                        <!--<p>No crews</p>-->
                                    </tbody>
                                <% } %>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Locations</h4>
                            <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#addLocationModal"> Add Location </button>
                            <table id='grid-locations' border="1" class="table table-bordered table-condensed table-hover table-striped" >
                                <thead>
                                    <tr>
                                        <th data-column-id="id" data-width="5%" data-type="numeric">#</th>
                                        <th data-column-id="name" data-formatter="link">Name</th>
                                        <th data-column-id="long_name">Long name</th>
                                        <th data-column-id="status" data-width="8%">Status</th>
                                        <th data-column-id="start"  data-width="8%">Start Date</th>
                                        <th data-column-id="end"  data-width="8%">End Date</th>
                                        <th data-column-id="crewname"  data-width="10%">Crew</th>
                                        <th data-column-id="options" data-width="15%" data-formatter="commands" data-sortable="false">Options</th>
                                    </tr>
                                </thead>
                                <%if (locations.length > 0) { %>
                                <tbody>
                                    <% for(var i=0; i<locations.length; i++) {%>
                                        <tr class="quote">
                                            <td> <%= locations[i].id %> </td>
                                            <td> <%= locations[i].name %> </td>
                                            <td> <%= locations[i].long_name %> </td>
                                            <td> <%= locations[i].status %> </td>
                                            <td> <%= locations[i].start_date %> </td>
                                            <td> <%= locations[i].end_date %> </td>
                                            <td> <%= locations[i].crewname %> </td>
                                        </tr>
                                    <% } %>
                                </tbody>
                                <% } else{ %>  
                                    <tbody>
                                        <!--<p>No locations</p>-->
                                    </tbody>
                                <% } %>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                            <div class="col-md-12">
                                <h4>Facilities</h4>
                                <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#addFacilitieModal"> Add Facilitie </button>
                                <table id='grid-facilities' border="1" class="table table-bordered table-condensed table-hover table-striped" >
                                    <thead>
                                        <tr>
                                            <th data-column-id="id" data-width="5%" data-type="numeric">#</th>
                                            <th data-column-id="name">Name</th>
                                            <th data-column-id="long_name">Long name</th>
                                            <th data-column-id="options" data-width="15%" data-formatter="commands" data-sortable="false">Options</th>
                                        </tr>
                                    </thead>
                                    <%if (facilities.length > 0) { %>
                                    <tbody>
                                        <% for(var i=0; i<facilities.length; i++) {%>
                                            <tr class="quote">
                                                <td> <%= facilities[i].id %> </td>
                                                <td> <%= facilities[i].name %> </td>
                                                <td> <%= facilities[i].long_name %> </td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                    <% } else{ %>  
                                        <tbody>
                                            <!--<p>No products</p>-->
                                        </tbody>
                                    <% } %>
                                </table>
                            </div>
                        </div>
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Products</h4>
                            <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#addProductModal"> Add Product </button>
                            <table id='grid-products' border="1" class="table table-bordered table-condensed table-hover table-striped" >
                                <thead>
                                    <tr>
                                        <th data-column-id="id" data-width="5%" data-type="numeric">#</th>
                                        <th data-column-id="name">Name</th>
                                        <th data-column-id="options" data-width="10%" data-formatter="commands" data-sortable="false">Options</th>
                                    </tr>
                                </thead>
                                <%if (products.length > 0) { %>
                                <tbody>
                                    <% for(var i=0; i<products.length; i++) {%>
                                        <tr class="quote">
                                            <td> <%= products[i].id %> </td>
                                            <td> <%= products[i].name %> </td>
                                        </tr>
                                    <% } %>
                                </tbody>
                                <% } else{ %>  
                                    <tbody>
                                        <!--<p>No products</p>-->
                                    </tbody>
                                <% } %>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Sands</h4>
                            <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#addSandModal"> Add Sand </button>
                            <table id='grid-sands' border="1" class="table table-bordered table-condensed table-hover table-striped" >
                                <thead>
                                    <tr>
                                        <th data-column-id="id" data-width="5%" data-type="numeric">#</th>
                                        <th data-column-id="name">Name</th>
                                        <th data-column-id="options" data-width="10%" data-formatter="commands" data-sortable="false">Options</th>
                                    </tr>
                                </thead>
                                <%if (sands.length > 0) { %>
                                <tbody>
                                    <% for(var i=0; i<sands.length; i++) {%>
                                        <tr class="quote">
                                            <td> <%= sands[i].id %> </td>
                                            <td> <%= sands[i].name %> </td>
                                        </tr>
                                    <% } %>
                                </tbody>
                                <% } else{ %>  
                                    <tbody>
                                        <!--<p>No sands</p>-->
                                    </tbody>
                                <% } %>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>



<!-- Add Sand -->
<div class="modal fade" id="addSandModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title" id="myModalLabel">Add Sand</h4>
        </div>
        <form role="form" id="addSandForm">
            <div class="modal-body">
                <div class="form-group">
                    <!-- TODO: agregar validacion y limpieza de caracteres para no guardar en la base de datos basura -->
                    <label for="sandName" class="h4 ">Name</label>
                    <input id="sandName" class="form-control" rows="5" required></input>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-success">Save changes</button>
            </div>
        </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<!-- Add Product -->
<div class="modal fade" id="addProductModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title" id="myModalLabel">Add Product</h4>
        </div>
        <form role="form" id="addProductForm">
            <div class="modal-body">
                <div class="form-group">
                    <!-- TODO: agregar validacion y limpieza de caracteres para no guardar en la base de datos basura -->
                    <label for="productName" class="h4 ">Name</label>
                    <input id="productName" class="form-control" rows="5" required></input>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-success">Save changes</button>
            </div>
        </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<!-- Add Facilitie -->
<div class="modal fade" id="addFacilitieModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title" id="myModalLabel">Add Facilitie</h4>
        </div>
        <form role="form" id="addFacilitieForm">
            <div class="modal-body">
                <div class="form-group">
                    <!-- TODO: agregar validacion y limpieza de caracteres para no guardar en la base de datos basura -->
                    <label for="facilitieName" class="h4 ">Name</label>
                    <input id="facilitieName" class="form-control" rows="5" required></input>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-success">Save changes</button>
            </div>
        </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<!-- Add Location -->
<div class="modal fade" id="addLocationModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title" id="myModalLabel">Add Location</h4>
        </div>
        <form role="form" id="addLocationForm">
            <div class="modal-body">
                <div class="form-group">
                    <!-- TODO: agregar validacion y limpieza de caracteres para no guardar en la base de datos basura -->
                    <label for="locationName" class="h4 ">Name</label>
                    <input id="locationName" class="form-control" rows="5" required></input>
                    <label for="locationGeo" class="h4 ">Geolocation</label>
                    <input id="locationGeo" class="form-control" rows="5" required></input>
                    <label for="locationStartDate" class="h4 ">Start date</label>
                    <input id="locationStartDate" class="form-control" rows="5" required type="date"></input>
                    <label for="locationEndDate" class="h4 ">End date</label>
                    <input id="locationEndDate" class="form-control" rows="5" required type="date"></input>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-success">Save changes</button>
            </div>
        </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<!-- Add Crew -->
<div class="modal fade" id="addCrewModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title" id="myModalLabel">Add crew</h4>
        </div>
        <form role="form" id="addCrewForm">
            <div class="modal-body">
                <div class="form-group">
                    <!-- TODO: agregar validacion y limpieza de caracteres para no guardar en la base de datos basura -->
                    <label for="crewName" class="h4 ">Name</label>
                    <input id="crewName" class="form-control" rows="5" required></input>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-success">Save changes</button>
            </div>
        </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<!-- Edit Facilities Modal -->
<div class="modal fade" id="editFacilitiesModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title" id="myModalLabel">Add crew</h4>
        </div>
        <form role="form" id="addCrewForm">
            <div class="modal-body">
                <div class="form-group">
                    <!-- TODO: agregar validacion y limpieza de caracteres para no guardar en la base de datos basura -->
                    <p>Name <span id="editNameFacility"> </span></p>
                    <p>Long Name <span id="editLongNameFacility"> </span></p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<!-- Edit Locations Modal -->
<div class="modal fade" id="editLocationsModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4>Location Details</h4>
        </div>
        <div class="modal-body">
        <div>
            <div class="row">
                <div class="col-md-12">
                    <p>Name <span id="editName"> </span></p>
                    <p>Long Name <span id="editLongName"> </span></p>
                    <p>Status <span id="editStatus"> </span></p>
                    <p>Start Date <span id="editStartDate"> </span></p>
                    <p>End Date <span id="editEndDate"> </span></p>
                    <p>Crew <span id="editCrew"> </span></p>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
        </div>
    </div>
</div> 




    <!-- <script src="/socket.io/socket.io.js"></script>  -->
    <%include ../partials/js %>

    <!-- Ticket detail modal  -->
    <%include ../partials/ticket-detail %>


    <!--
        Inicializa el bootgrid y sus opciones, TODO: ver si se puede alimentar esto desde un endpoint
    -->
    <script>
        (function(APP){
            APP.SERVICE = APP.SERVICE || {};

            APP.SERVICE.ADMINISTRATIVE = APP.SERVICE.ADMINISTRATIVE || {};

            APP.LOAD = APP.LOAD || {};

            //page load functionality first!
            APP.LOAD.SIDE_BAR = APP.LOAD.SIDE_BAR || function () {
                $('#sidebarCollapse').on('click', function () {
                    $('#sidebar').toggleClass('active');
                });
            };

            APP.LOAD.GRID_LOCATIONS = APP.LOAD.GRID_LOCATIONS || function(){

                var linkFormatter = function(column, row){
                    return "<a href='../locations/"+ row.id +"' class='text-center black-link'>" + row.name + "</a>";
                };  

                var commandsFormatter = function(column, row) {
                    //return "<button type=\"button\" class=\"btn btn-xs btn-secondary command-delete\" data-row-id=\"" + row.id + "\"><span class=\"fa fa-trash-o\"></span> Delete</button> &nbsp;"  +
                    //"<a href=\"#editLocationsModal\" data-toggle=\"modal\" data-hr=\"" + row.id +  "\" class=\"text-center black-link btn btn-default show-edit-locations\"><span class=\"fa fa-edit\"></span> Edit &nbsp;</a>" ;

                    return "<a href=\"#editLocationsModal\" data-toggle=\"modal\" data-hr=\"" + row.id +  "\" class=\"text-center black-link btn btn-default show-edit-locations\"><span class=\"fa fa-edit\"></span> Edit &nbsp;</a>" ;
                        
                };

                var loadedRsJQueryBootgrid = function(){
                    var onClickDelete = function(e){
                        var r = confirm("Are you sure you want to delete this location?");
                        if (r == true) {
                            $.ajax({
                                url: '/api/administrative/deletelocation/',
                                type: 'PUT', //type is any HTTP method
                                data: {
                                    locationId: $(this).data("row-id")
                                },
                                success: function (msj) {
                                    alert(msj.message);
                                    location.reload();
                                },
                                error: function(xhr) { // if error occured
                                    alert("Error occured. please try again");
                                },
                            });
                        }
                    };

                    var onEditShow = function(e){
                        console.log("edit locations clicked");
                        $("#editLocationsModal").modal({
                            show: true
                        }, $(this));
                    };

                    $("#grid-locations")
                        .find(".command-delete")
                        .on("click", onClickDelete)
                        .end()
                        .find(".show-edit-locations")
                        .on("click", onEditShow);
                };

                $("#grid-locations")
                    .bootgrid({
                        caseSensitive: false,
                        rowCount: [50,75,100,-1],
                        formatters: {
                            "link": linkFormatter,
                            "commands": commandsFormatter
                        }
                    })
                    .on("loaded.rs.jquery.bootgrid", loadedRsJQueryBootgrid);
            };

            APP.LOAD.GRID_PRODUCTS = APP.LOAD.GRID_PRODUCTS || function(){

                var commandsFormatter = function(column, row) {
                    return "<button type=\"button\" class=\"btn btn-xs btn-secondary command-delete\" data-row-id=\"" + row.id + "\"><span class=\"fa fa-trash-o\"></span> Delete</button>";
                };

                var loadedRsJQueryBootgrid = function(){

                    var onClickDelete = function(e){

                        var r = confirm("Are you sure you want to delete this product?");
                        if (r == true) {
                            $.ajax({
                                url: '/api/administrative/deleteproduct/',
                                type: 'PUT', //type is any HTTP method
                                data: {
                                    productId: $(this).data("row-id")
                                },
                                success: function (msj) {
                                    alert(msj.message);
                                    location.reload();
                                },
                                error: function(xhr) { // if error occured
                                    alert("Error occured. please try again");
                                },
                            });
                        }
                    };

                    $("#grid-products")
                        .find(".command-delete")
                        .on("click", onClickDelete);
                };

                $("#grid-products")
                    .bootgrid({
                        caseSensitive: false,
                        rowCount: [50,75,100,-1],
                        formatters: {
                            "commands": commandsFormatter
                        }
                    })
                    .on("loaded.rs.jquery.bootgrid", loadedRsJQueryBootgrid);
            };

            APP.LOAD.GRID_FACILITIES = APP.LOAD.GRID_FACILITIES || function(){

                var commandsFormatter = function(column, row) {
                    //return "<button type=\"button\" class=\"btn btn-xs btn-secondary command-delete\" data-row-id=\"" + row.id + "\"><span class=\"fa fa-trash-o\"></span> Delete</button> &nbsp;"  +
                    //"<a href=\"#editFacilitiesModal\" data-toggle=\"modal\" data-hr=\"" + row.id +  "\" class=\"text-center black-link btn btn-default show-edit-facilities\"><span class=\"fa fa-edit\"></span> Edit &nbsp;</a>" ;

                    return "<a href=\"#editFacilitiesModal\" data-toggle=\"modal\" data-hr=\"" + row.id +  "\" class=\"text-center black-link btn btn-default show-edit-facilities\"><span class=\"fa fa-edit\"></span> Edit &nbsp;</a>" ;
                };

                var loadedRsJQueryBootgrid = function(){

                    var onClickDelete = function(e){
                        var r = confirm("Are you sure you want to delete this facility?");
                        if (r == true) {
                            $.ajax({
                                url: '/api/administrative/deletefacility/',
                                type: 'PUT', //type is any HTTP method
                                data: {
                                    facilityId: $(this).data("row-id")
                                },
                                success: function (msj) {
                                    alert(msj.message);
                                    location.reload();
                                },
                                error: function(xhr) { // if error occured
                                    alert("Error occured. please try again");
                                },
                            });
                        }
                    };

                    var onEditShow = function(e){
                        console.log("edit facilities clicked")
                        $("#editFacilitiesModal").modal({
                            show: true
                        }, $(this));
                    };

                    $("#grid-facilities")
                        .find(".command-delete")
                        .on("click", onClickDelete)
                        .end()
                        .find(".show-edit-facilities")
                        .on("click", onEditShow);;
                };

                $("#grid-facilities")
                    .bootgrid({
                        caseSensitive: false,
                        rowCount: [50,75,100,-1],
                        formatters: {
                            "commands": commandsFormatter
                        }
                    })
                    .on("loaded.rs.jquery.bootgrid", loadedRsJQueryBootgrid);
            };

            APP.LOAD.GRID_SANDS = APP.LOAD.GRID_SANDS || function(){

                var commandsFormatter = function(column, row) {
                    return "<button type=\"button\" class=\"btn btn-xs btn-secondary command-delete\" data-row-id=\"" + row.id + "\"><span class=\"fa fa-trash-o\"></span> Delete</button>";
                };

                var loadedRsJQueryBootgrid = function(){

                    var onClickDelete = function(e){
                        var r = confirm("Are you sure you want to delete this sand?");
                        if (r == true) {
                            $.ajax({
                                url: '/api/administrative/deletesand/',
                                type: 'PUT', //type is any HTTP method
                                data: {
                                        sandId: $(this).data("row-id")
                                },
                                success: function (msj) {
                                    alert(msj.message);
                                    location.reload();
                                },
                                error: function(xhr) { // if error occured
                                    alert("Error occured. please try again");
                                },
                            });
                        }
                    };

                    $("#grid-sands")
                        .find(".command-delete")
                        .on("click", onClickDelete);
                };

                $("#grid-sands")
                    .bootgrid({
                        caseSensitive: false,
                        rowCount: [50,75,100,-1],
                        formatters: {
                            "commands": commandsFormatter
                        }
                    })
                    .on("loaded.rs.jquery.bootgrid", loadedRsJQueryBootgrid);
            };

            APP.LOAD.GRID_CREWS = APP.LOAD.GRID_CREWS || function(){

                var commandsFormatter = function(column, row) {
                    return "<button type=\"button\" class=\"btn btn-xs btn-secondary command-delete\" data-row-id=\"" + row.id + "\"><span class=\"fa fa-trash-o\"></span> Delete</button>";
                };

                var loadedRsJQueryBootgrid = function(){

                    var onClickDelete = function(e){
                        var r = confirm("Are you sure you want to delete this crew?");
                        if (r == true) {
                            $.ajax({
                                url: '/api/administrative/deletecrew/',
                                type: 'PUT', //type is any HTTP method
                                data: {
                                        crewId: $(this).data("row-id")
                                },
                                success: function (msj) {
                                    alert(msj.message);
                                    location.reload();
                                },
                                error: function(xhr) { // if error occured
                                    alert("Error occured. please try again");
                                },
                            });
                        }
                    };

                    $("#grid-crews")
                        .find(".command-delete")
                        .on("click", onClickDelete);
                };

                $("#grid-crews")
                    .bootgrid({
                        caseSensitive: false,
                        rowCount: [50,75,100,-1],
                        formatters: {
                            "commands": commandsFormatter
                        }
                    })
                    .on("loaded.rs.jquery.bootgrid", loadedRsJQueryBootgrid);
            };

            APP.EVENTS = APP.EVENTS || {
                MODALS_SUBMIT: function(){

                    // Add Crew
                    $("#addCrewForm").submit(function(event) {

                        event.preventDefault(); // cancels the form submission
                        $.ajax({
                            cache: false,
                            url: '/api/administrative/addcrew/',
                            type: 'POST',
                            data: {
                                name: $("#crewName").val()
                            },
                            success: function (msj) {
                                alert(msj.message);
                                location.reload(); // Recarga la pagina para ver el cambio
                            },
                            error: function(xhr) {
                                alert('Couldn\'t insert in the database. Try again, please.');
                            },
                        });

                        $('#addCrewModal').modal('hide');
                        refreshPage();
                    });

                    // Add Sand
                    $("#addSandForm").submit(function(event) {

                        event.preventDefault(); // cancels the form submission
                        $.ajax({
                            cache: false,
                            url: '/api/administrative/addsand/',
                            type: 'POST',
                            data: {
                                name: $("#sandName").val()
                            },
                            success: function (msj) {
                                alert(msj.message);
                                location.reload(); // Recarga la pagina para ver el cambio
                            },
                            error: function(xhr) {
                                alert('Couldn\'t insert in the database. Try again, please.');
                            },
                        });

                        $('#addSandModal').modal('hide');
                        refreshPage();
                    });

                    // Add product
                    $("#addProductForm").submit(function(event) { 
                        event.preventDefault(); // cancels the form submission
                        $.ajax({
                            cache: false,
                            url: '/api/administrative/addproduct/',
                            type: 'POST',
                            data: {
                                name: $("#productName").val()
                            },
                            success: function (msj) {
                                alert(msj.message);
                                location.reload(); // Recarga la pagina para ver el cambio
                            },
                            error: function(xhr) {
                                alert('Couldn\'t insert in the database. Try again, please.');
                            },
                        });

                        $('#addProductModal').modal('hide');
                        refreshPage();
                    });

                    // Add facilitie
                    $("#addFacilitieForm").submit(function(event) { 
                        event.preventDefault(); // cancels the form submission
                        $.ajax({
                            cache: false,
                            url: '/api/administrative/addfacilitie/',
                            type: 'POST',
                            data: {
                                name: $("#facilitieName").val()
                            },
                            success: function (msj) {
                                alert(msj.message);
                                location.reload(); // Recarga la pagina para ver el cambio
                            },
                            error: function(xhr) {
                                alert('Couldn\'t insert in the database. Try again, please.');
                            },
                        });

                        $('#addFacilitieModal').modal('hide');
                        refreshPage();
                    });

                    // Add location
                    $("#addLocationForm").submit(function(event) { 
                        event.preventDefault(); // cancels the form submission
                        $.ajax({
                            cache: false,
                            url: '/api/administrative/addlocation/',
                            type: 'POST',
                            data: {
                                name: $("#locationName").val(),
                                geolocation: $("#locationGeo").val(),
                                startDate: $("#locationStartDate").val(),
                                endDate: $("#locationEndDate").val()
                            },
                            success: function (msj) {
                                alert(msj.message);
                                location.reload(); // Recarga la pagina para ver el cambio
                            },
                            error: function(xhr) {
                                alert('Couldn\'t insert in the database. Try again, please.');
                            },
                        });

                        $('#addLocationModal').modal('hide');
                        refreshPage();
                    });

                },
                MODAL_FACILITIES: function(){
                    //$(document).on('shown.bs.modal','#editFacilitiesModal', function(e) {
                    $('#editFacilitiesModal').on('shown.bs.modal', function (e) {
                        
                        var $trigger = $(e.relatedTarget);

                        console.log("modal facilities")

                        $.getJSON('/api/administrative/getFacilityDetail/' + $trigger.data('hr'), function(data) {
            
                            $('#editNameFacility').html(
                                "<strong><a id='updateNameFacility' data-pk='" + data[0].id + "' data-title='Update name' "+
                                "data-type='text' class='black-link' "+
                                "href='#' data-name='name'>"+data[0].name+"</a></strong>"    
                            );
                            $('#editLongNameFacility').html(
                                "<strong><a id='updateLongNameFacility' data-pk='" + data[0].id + "' data-title='Update long name' "+
                                "data-type='textarea' class='black-link' "+
                                "href='#' data-name='long_name'>"+data[0].long_name+"</a></strong>"    
                            );
            
                            // x-editable
                            $('#updateNameFacility, #updateLongNameFacility').editable({
                                url: '/api/administrative/updateFacility/',
                                send: 'always',
                                success: function(response, newValue) {
                                    if (response.status == 'error') 
                                        return response.msg; //msg will be shown in editable form
                                }
                                
                            });
                        });

                    });
                    
                    // Recarga la pagina para que se vean los cambios
                    $('#editFacilitiesModal').on('hide.bs.modal', function (e) {
                                location.reload();
                    });
                },
                MODAL_LOCATIONS: function(){
                    //$(document).on('shown.bs.modal','#editLocationsModal', function(e) {
                    $('#editLocationsModal').on('shown.bs.modal', function (e) {

                        var $trigger = $(e.relatedTarget);

                        console.log("modal locations");
                        
                        // Obtiene el detalle del ticket
                        $.getJSON('/api/administrative/getLocationDetail/' + $trigger.data('hr'), function(data) {

                            $('#editName').html(
                                "<strong><a id='updateName' data-pk='" + data[0].id + "' data-title='Update name' "+
                                "data-type='text' class='black-link' "+
                                "href='#' data-name='name'>"+data[0].name+"</a></strong>"    
                            );
                            $('#editLongName').html(
                                "<strong><a id='updateLongName' data-pk='" + data[0].id + "' data-title='Update long name' "+
                                "data-type='textarea' class='black-link' "+
                                "href='#' data-name='long_name'>"+data[0].long_name+"</a></strong>"    
                            );
                            $('#editStatus').html(
                                "<strong><a id='updateStatus' data-pk='" + data[0].id + "' data-title='Update Status' "+
                                "data-type='select' class='black-link' "+
                                "href='#' data-name='status'>"+data[0].status+"</a></strong>"
                            );
                            $('#editStartDate').html(
                                "<strong><a id='updateStartDate' data-type='combodate' data-format='YYYY-MM-DD' data-viewformat='MM-DD-YYYY' data-pk='" + data[0].id + "' data-title='Update StartDate' "+
                                "data-type='text' class='black-link' "+
                                "href='#' data-name='start_date'>"+data[0].start_date+"</a></strong>"
                            );
                            $('#editEndDate').html(
                                "<strong><a id='updateEndDate' data-type='combodate' data-format='YYYY-MM-DD' data-viewformat='MM-DD-YYYY' data-pk='" + data[0].id + "' data-title='Update EndDate' "+
                                "data-type='text' class='black-link' "+
                                "href='#' data-name='end_date'>"+data[0].end_date+"</a></strong>"    
                            );
                            $('#editCrew').html(
                                "<strong><a id='updateCrew' data-pk='" + data[0].id + "' data-title='Update Crew' "+
                                "data-type='select' class='black-link' "+
                                "href='#' data-name='crews_id'>"+data[0].crewname+"</a></strong>"    
                            );

                            // x-editable
                            $('#updateName, #updateLongName').editable({
                                url: '/api/administrative/updateLocation/',
                                send: 'always',
                                success: function(response, newValue) {
                                    if (response.status == 'error') 
                                        return response.msg; //msg will be shown in editable form
                                }
                                
                            });

                            $('#updateStatus').editable({   
                                url: '/api/administrative/updateLocation/',
                                send: 'always',
                                source: [
                                    {value: "ON GOING", text: 'ON GOING'},
                                    {value: "FINISHED", text: 'FINISHED'}
                                ],
                                success: function(response, newValue) {
                                    if (response.status == 'error') 
                                        return response.msg; //msg will be shown in editable form
                                },
                            });

                            $('#updateStartDate, #updateEndDate').editable({
                                url: '/api/administrative/updateLocation/',
                                send: 'always',
                                format: 'yyyy-mm-dd',    
                                viewformat: 'mm-dd-yyyy',
                                combodate: { 
                                    maxYear: 2035,
                                    minYear:1930
                                }, 
                                datepicker: {
                                        weekStart: 1
                                },
                                success: function(response, newValue) {
                                    if (response.status == 'error') 
                                        return response.msg; //msg will be shown in editable form
                                },
                            });

                            var sources = []
                            <%if (crews.length > 0) { %>
                                <% for(var i=0; i<crews.length; i++) {%>
                                        sources.push({value: "<%= crews[i].id %>", text: "<%= crews[i].name %>"});
                                <% } %>
                            <% } %>

                            $('#updateCrew').editable({   
                                url: '/api/administrative/updateLocation/',
                                send: 'always',
                                source: sources,
                                success: function(response, newValue) {
                                    if (response.status == 'error') 
                                        return response.msg; //msg will be shown in editable form
                                },
                            });
                        });

                    });
                    
                    // Recarga la pagina para que se vean los cambios
                    $('#editLocationsModal').on('hide.bs.modal', function (e) {
                        location.reload();
                    });
                },
                INIT: function(){
                    APP.EVENTS.MODALS_SUBMIT();
                    APP.EVENTS.MODAL_FACILITIES();
                    APP.EVENTS.MODAL_LOCATIONS();
                }
            };
             
            APP.LOAD.SIDE_BAR();
            APP.LOAD.GRID_LOCATIONS();
            APP.LOAD.GRID_PRODUCTS();
            APP.LOAD.GRID_FACILITIES();
            APP.LOAD.GRID_SANDS();
            APP.LOAD.GRID_CREWS();
            APP.EVENTS.INIT();
        })(window);
    </script>

    <script>

            


            // Facilities

            

    </script>


</body>
</html>